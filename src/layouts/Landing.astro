---
import ClubsWhite from '@assets/clubs--white.svg'
import ConnectButton from '@components/Wallet/ConnectButton.vue'

import '@styles/global.scss'
const title = 'Clubs'
const name = 'Clubs' // not sure the difference here compared to title
const description = ''
const url = ''
const ogURL = ''
const twitterHandle = 'devprtcl'
---

<!DOCTYPE html>
<html class="dark" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="description" content={`${description}`} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={`${ogURL}`} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content={name} />
    <meta name="twitter:site" content={twitterHandle} />
    <meta name="twitter:creator" content={twitterHandle} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={`${ogURL}`} />
  </head>

  <body class="min-h-screen bg-dp-blue-grey-400 font-body text-white">
    <slot name="before-header" />
    <header class="relative flex justify-between p-12">
      <h1 class="flex items-center gap-2.5 font-['Poppins'] text-xl font-bold">
        <img src={ClubsWhite} />Clubs
      </h1>
      <nav class="flex justify-between gap-10">
        <!-- TODO: path for this -->
        <a class="rounded border py-2 px-4" href="/getstarted">Get Started</a>
        <ConnectButton client:only="vue" />
      </nav>
    </header>

    <main class="container relative mx-auto">
      <slot />
    </main>
  </body>
</html>

<script>
  import { onSubmitConfig } from '@devprotocol/clubs-core'
  import { GetModalProvider, ReConnectWallet } from '@fixtures/wallet'
  import { utils } from 'ethers'
  import { onAuthStateChanged } from 'firebase/auth'
  import { initializeFirebase } from '../fixtures/firebase'

  const auth = initializeFirebase()
  let jwtIdToken: string | undefined

  onAuthStateChanged(auth, async (user) => {
    if (user) {
      // User is signed in, see docs for a list of available properties
      // https://firebase.google.com/docs/reference/js/firebase.User
      jwtIdToken = await user.getIdToken()
    } else {
      jwtIdToken = undefined
    }
  })

  onSubmitConfig(async (data, onFinish) => {
    const splitHostname = window.location.hostname.split('.')
    const site = splitHostname[0]

    const modalProvider = GetModalProvider()
    const { provider, currentAddress } = await ReConnectWallet(modalProvider)
    if (!currentAddress || !provider) {
      return
    }
    const signer = provider.getSigner()

    const hash = await utils.hashMessage(data)
    const sig = await signer.signMessage(hash)
    if (!sig) {
      return
    }

    const body = {
      site,
      config: data,
      hash,
      sig,
      jwtIdToken,
    }

    const res = await fetch('/api/updateDraftConfig', {
      method: 'POST',
      body: JSON.stringify(body),
    })

    const success = res.ok
    onFinish({ success })
  })
</script>
