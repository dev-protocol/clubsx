---
import ClubsColor from '@assets/clubs--color.svg'
import PolygonLogo from '@assets/polygon-logo.svg'

import ConnectButton from '@components/Wallet/ConnectButton.vue'
import CLBButton from 'node_modules/@devprotocol/clubs-core/src/ui/vue/CLBButton.vue'

import '@devprotocol/clubs-core/styles'

const { connectButton = 'show' } = Astro.props as {
  connectButton?: 'show' | 'hidden'
}

const title = 'Clubs'
const name = 'Clubs' // not sure the difference here compared to title
const description = ''
const url = ''
const ogURL = ''
const twitterHandle = 'devprtcl'
---

<script is:inline>
  // TODO: Fix dark mode script next time.
  // let colorScheme;
  // window.matchMedia('(prefers-color-scheme: dark)').addEventListener('change', event => {
  //   colorScheme = event.matches ? "dark" : "light"
  // });
</script>

<html lang="en" data-theme={colorScheme}>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <link rel="icon" type="image/png" href="/favicon.png" />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin /><link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@700&display=swap"
      rel="stylesheet"
    />
    <meta name="description" content={`${description}`} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={`${ogURL}`} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content={name} />
    <meta name="twitter:site" content={twitterHandle} />
    <meta name="twitter:creator" content={twitterHandle} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={`${ogURL}`} />
  </head>

  <body
    class="bg-var(--hs-theme-dp-white-200) min-h-screen font-body text-black"
  >
    <slot name="before-header" />
    <header
      class="relative flex items-center justify-between bg-dp-black-600 py-4 px-6"
    >
      <a href="/">
        <h1
          class="flex items-center gap-2.5 font-['Poppins'] text-xl font-bold text-[var(--hs-theme-dp-white-200)]"
        >
          <img src={ClubsColor} />Clubs
        </h1>
      </a>
      <slot name="right" />
      {
        connectButton === 'show' && (
          <nav class="flex justify-between gap-10">
            <ConnectButton type="white" client:load />
          </nav>
        )
      }
    </header>

    <main>
      <slot />
    </main>

    <footer class="clb-footer">
      <div class="clb-footer__wrapper">
        <div
          class="flex flex-col gap-4 md:flex-row md:items-center md:justify-between"
        >
          <CLBButton link="#" type="outlined">Join the Waitlist</CLBButton>
          <div class="wrap-none flex flex-row items-center">
            <p class="text-lg font-bold md:text-lg">Clubs is powered by</p>
            <svg
              aria-hidden="true"
              width="166"
              height="50"
              viewBox="0 0 176 63"
              fill="none"
              xmlns="http://www.w3.org/2000/svg"
            >
              <path
                d="M51.2923 32.0772V41.2944C51.2889 41.8692 51.1365 42.4334 50.8498 42.9316C50.5632 43.4298 50.1522 43.8451 49.657 44.1369L41.6726 48.736C41.178 49.0308 40.6131 49.1863 40.0373 49.1863C39.4616 49.1863 38.8966 49.0308 38.4021 48.736L30.4176 44.1369C29.9224 43.8451 29.5114 43.4298 29.2248 42.9316C28.9382 42.4334 28.7857 41.8692 28.7824 41.2944V38.7075L32.8704 36.3345V40.8314L40.0246 44.9833L47.1786 40.8314V32.5467L40.0246 28.3948L23.2636 38.1039C22.7644 38.3851 22.2013 38.5329 21.6283 38.5329C21.0554 38.5329 20.4923 38.3851 19.9931 38.1039L12.0086 33.4857C11.521 33.1894 11.1179 32.7726 10.8382 32.2752C10.5585 31.7779 10.4117 31.217 10.4117 30.6464V21.4291C10.4151 20.8543 10.5675 20.2903 10.8542 19.792C11.1407 19.2938 11.5518 18.8785 12.0469 18.5866L20.0314 13.9876C20.527 13.6958 21.0915 13.5419 21.6666 13.5419C22.2418 13.5419 22.8063 13.6958 23.3019 13.9876L31.2864 18.5866C31.7815 18.8785 32.1926 19.2938 32.4792 19.792C32.7658 20.2903 32.9183 20.8543 32.9216 21.4291V24.016L28.808 26.3731V21.9018L21.6539 17.7499L14.4998 21.9018V30.1769L21.6539 34.3289L38.4149 24.6197C38.914 24.3384 39.4772 24.1908 40.0501 24.1908C40.623 24.1908 41.1862 24.3384 41.6853 24.6197L49.6698 29.2379C50.1622 29.5311 50.5703 29.9466 50.8546 30.4441C51.139 30.9416 51.2897 31.5042 51.2923 32.0772Z"
                fill="#7B3FE4"></path>
              <path
                class="toggleable-dark-mode-text"
                d="M65.5199 44.6448V37.462C66.2991 38.4424 67.714 38.9917 69.3524 38.9917C73.5362 38.9917 76.3627 36.0215 76.3627 31.4928C76.3627 26.964 73.7662 23.9938 69.7005 23.9938C67.8257 23.9938 66.3822 24.6868 65.5166 25.8111V24.2141H61.5116V44.6352L65.5199 44.6448ZM68.8573 35.5297C66.6919 35.5297 65.2803 33.9137 65.2803 31.4928C65.2803 29.0719 66.6919 27.427 68.8573 27.427C70.962 27.427 72.4056 29.024 72.4056 31.4928C72.4056 33.9616 70.9716 35.5297 68.8573 35.5297Z"
                fill="#000"></path>
              <path
                class="toggleable-dark-mode-text"
                d="M85.4664 38.9917C89.9381 38.9917 93.1315 35.8172 93.1315 31.4928C93.1315 27.1683 89.9381 23.9938 85.4664 23.9938C80.995 23.9938 77.8013 27.1652 77.8013 31.4928C77.8013 35.8203 80.995 38.9917 85.4664 38.9917ZM85.4664 35.5297C83.3042 35.5297 81.8319 33.8849 81.8319 31.4928C81.8319 29.1006 83.3074 27.427 85.4664 27.427C87.6254 27.427 89.1006 29.0687 89.1006 31.4928C89.1006 33.9168 87.6313 35.5297 85.4664 35.5297Z"
                fill="#000"></path>
              <path
                class="toggleable-dark-mode-text"
                d="M99.5727 38.7619V17.9065H95.5648V38.7619H99.5727Z"
                fill="#000"></path>
              <path
                class="toggleable-dark-mode-text"
                d="M111.623 24.2236L108.595 33.5974L105.538 24.2236H101.434L106.71 38.6436L104.577 44.6447H108.41L110.469 38.7075L115.749 24.23L111.623 24.2236Z"
                fill="#000"></path>
              <path
                class="toggleable-dark-mode-text"
                d="M127.008 25.6673C126.2 24.658 124.773 23.9938 122.999 23.9938C118.759 23.9938 116.194 26.964 116.194 31.4928C116.194 36.0215 118.748 38.9917 123.057 38.9917C124.759 38.9917 126.286 38.3531 127.037 37.2895V39.2058C127.037 40.5599 126.143 41.5117 124.932 41.5117H118.241V44.6575H125.568C128.854 44.6575 131.045 42.6678 131.045 39.6369V24.2237H127.008V25.6673ZM123.692 35.5297C121.556 35.5297 120.145 33.9328 120.145 31.4928C120.145 29.0527 121.556 27.427 123.692 27.427C125.829 27.427 127.266 29.024 127.266 31.4928C127.266 33.9616 125.855 35.5297 123.692 35.5297Z"
                fill="#000"></path>
              <path
                class="toggleable-dark-mode-text"
                d="M141.153 38.9917C145.624 38.9917 148.818 35.8172 148.818 31.4928C148.818 27.1683 145.624 23.9938 141.153 23.9938C136.682 23.9938 133.488 27.1652 133.488 31.4928C133.488 35.8203 136.682 38.9917 141.153 38.9917ZM141.153 35.5297C138.988 35.5297 137.518 33.8849 137.518 31.4928C137.518 29.1006 138.988 27.427 141.153 27.427C143.318 27.427 144.788 29.0687 144.788 31.4928C144.788 33.9168 143.315 35.5297 141.153 35.5297Z"
                fill="#000"></path>
              <path
                class="toggleable-dark-mode-text"
                d="M155.055 38.7618V30.7997C155.055 28.925 156.294 27.5708 158.054 27.5708C159.728 27.5708 160.852 28.8483 160.852 30.5985V38.7618H164.888V29.7042C164.888 26.3572 162.756 23.9938 159.46 23.9938C157.47 23.9938 155.857 24.8305 155.049 26.2294V24.2237H151.018V38.7618H155.055Z"
                fill="#000"></path>
            </svg>
          </div>
        </div>
        <div class="wrap my-6 flex flex-row gap-4">
          <div class="flex flex-col gap-2">
            <p class="font-bold">Community</p>
            <ul class="clb-footer__links">
              <li><a href="#">Discord</a></li>
              <li><a href="#">Medium</a></li>
              <li><a href="#">Twitter</a></li>
            </ul>
          </div>
          <div class="flex flex-col gap-2">
            <p class="font-bold">About</p>
            <ul class="clb-footer__links">
              <li><a href="#">Dev Protocol</a></li>
              <li><a href="#">Forums</a></li>
            </ul>
          </div>
        </div>
        <p>
          <small
            >Clubs build on Dev Protocol, the core of the Decentralized Creator
            Economy, completely on-chain and 100% composable middleware
            protocol.</small
          >
        </p>
      </div>
    </footer>
  </body>
</html>

<script>
  import { onSubmitConfig } from '@devprotocol/clubs-core'
  import { GetModalProvider, ReConnectWallet } from '@fixtures/wallet'
  import { utils } from 'ethers'
  import { onAuthStateChanged } from 'firebase/auth'
  import { initializeFirebase } from '../fixtures/firebase'

  const auth = initializeFirebase()
  let jwtIdToken: string | undefined

  onAuthStateChanged(auth, async (user) => {
    if (user) {
      // User is signed in, see docs for a list of available properties
      // https://firebase.google.com/docs/reference/js/firebase.User
      jwtIdToken = await user.getIdToken()
    } else {
      jwtIdToken = undefined
    }
  })

  onSubmitConfig(async (data, onFinish) => {
    const splitHostname = window.location.hostname.split('.')
    const site = splitHostname[0]

    const modalProvider = GetModalProvider()
    const { provider, currentAddress } = await ReConnectWallet(modalProvider)
    if (!currentAddress || !provider) {
      return
    }
    const signer = provider.getSigner()

    const hash = await utils.hashMessage(data)
    const sig = await signer.signMessage(hash)
    if (!sig) {
      return
    }

    const body = {
      site,
      config: data,
      hash,
      sig,
      jwtIdToken,
    }

    const res = await fetch('/api/updateDraftConfig', {
      method: 'POST',
      body: JSON.stringify(body),
    })

    const success = res.ok
    onFinish({ success })
  })
</script>

<style lang="scss" is:global>
  @use 'node_modules/@devprotocol/hashi';
  @use 'node_modules/@devprotocol/hashi/hs-button';

  html,
  body {
    scroll-behavior: smooth;

    @include hashi.dark-mode {
      color: #fff;
    }
  }

  @include hs-button.extend('large') {
    --hs-button-padding: 0.7rem 1rem;
  }

  @include hs-button.extend('outlined.is-white') {
    @include hs-button.color(
      (
        ink: 'var(--hs-theme-dp-white-200)',
        border: 'var(--hs-theme-dp-white-200)',
      )
    );

    &:hover,
    &:focus {
      @include hs-button.color(
        (
          fill: 'var(--hs-theme-dp-white-200)',
          ink: 'var(--hs-theme-dp-white-ink)',
          border: 'var(--hs-theme-dp-white-200)',
        )
      );
    }

    &:active {
      @include hs-button.color(
        (
          fill: 'var(--hs-theme-dp-white-400)',
          ink: 'var(--hs-theme-dp-white-ink)',
          border: 'var(--hs-theme-dp-white-400)',
        )
      );
    }
  }

  @include hs-button.extend('filled.is-white') {
    @include hs-button.color(
      (
        fill: 'var(--hs-theme-dp-white-200)',
        ink: 'var(--hs-theme-dp-white-ink)',
        border: 'var(--hs-theme-dp-white-200)',
      )
    );

    &:hover,
    &:focus {
      @include hs-button.color(
        (
          fill: 'var(--hs-theme-dp-white-200)',
          ink: 'var(--hs-theme-dp-white-ink)',
          border: 'var(--hs-theme-dp-white-200)',
        )
      );
    }

    &:active {
      @include hs-button.color(
        (
          fill: 'var(--hs-theme-dp-white-400)',
          ink: 'var(--hs-theme-dp-white-ink)',
          border: 'var(--hs-theme-dp-white-400)',
        )
      );
    }
  }

  .toggleable-dark-mode-text {
    fill: #000;

    @include hashi.dark-mode {
      fill: #fff;
    }
  }

  .clb-footer {
    padding: 3rem 0;

    @include hashi.dark-mode {
      color: #fff;
    }

    .clb-footer__wrapper {
      width: calc(100% - 50px);
      max-width: 1077px;
      margin: 0 auto;
    }

    .clb-footer__links {
      li a {
        transition: all var(--hs-transition-time) ease;

        &:hover,
        &:focus {
          background: rgba(#000, 20%);
          text-decoration: underline;

          @include hashi.dark-mode {
            background: rgba(#fff, 20%);
          }
        }

        &:active {
          background: rgba(#000, 33%);

          @include hashi.dark-mode {
            background: rgba(#fff, 33%);
          }
        }
      }
    }
  }
</style>
