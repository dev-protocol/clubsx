---
import type { ClubsConfiguration } from '@devprotocol/clubs-core'
import Navbar from '@components/Global/Navbar.vue'
import CLBWrapper from '@components/Primitives/CLBWrapper.astro'
import Sidebar from '@components/Sidebar/Sidebar.vue'
import Footer from '@components/Global/Footer.astro'
import og from '@assets/og.png'
import '@styles/global.scss'
import { NavLink, PathCondition } from '@constants/navLink'

const { page } = Astro.params
const { metaTitle, config } = Astro.props as {
  metaTitle?: string
  config: ClubsConfiguration
}

const title = metaTitle ? `${config.name} : ${metaTitle}` : config.name

const ogURL = new URL(
  Astro.url.pathname
    .replace(/(.*)\/sites_\/\w*(.*)/i, '$1$2')
    .replace(/(.*)\/$/, '$1') + og,
  config.url ?? 'http://localhost'
)

const headerLinks =
  config.options?.find((option) => option.key === 'headerLinks')?.value ??
  ([] as NavLink[])

const navLinks =
  config.options?.find((option) => option.key === 'navLinks')?.value ??
  ([] as NavLink[])

const socialLinks =
  config.options?.find((option) => option.key === 'socialLinks')?.value ??
  ([] as NavLink[])

const sidebarPrimaryLinks =
  config.options?.find((option) => option.key === 'sidebarPrimaryLinks')
    ?.value ?? ([] as NavLink[])

const sidebarLinks =
  config.options?.find((option) => option.key === 'sidebarLinks')?.value ??
  ([] as NavLink[])

const avatarImgSrc = config.options?.find(
  (option) => option.key === 'avatarImgSrc'
)?.value

const fullViewPaths =
  (config.options?.find((option) => option.key === 'fullViewPaths')
    ?.value as PathCondition[]) ?? ([] as PathCondition[])

const isFullView = fullViewPaths.some((path) =>
  path.exact || page === undefined
    ? path.path === (page ?? '')
    : page !== undefined
    ? page.toString().startsWith(path.path)
    : false
)

const url = Astro.url.href.replace(/(.*)\/sites_\/\w*(.*)/i, '$1$2')
---

<!DOCTYPE html>
<html class="dark" lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <link rel="icon" type="image/png" href="/favicon.png" />
    <meta name="description" content={`${config.description}`} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={`${ogURL}`} />
    <meta property="og:description" content={config.description} />
    <meta property="og:site_name" content={config.name} />
    <meta name="twitter:site" content={config.twitterHandle} />
    <meta name="twitter:creator" content={config.twitterHandle} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={config.description} />
    <meta name="twitter:image" content={`${ogURL}`} />
  </head>

  <body class="font-body bg-black text-white min-h-screen">
    <Navbar
      client:only="vue"
      tenantName={config.name}
      headerLinks={headerLinks}
      navLinks={navLinks}
      socialLinks={socialLinks}
    />
    {
      isFullView ? (
        <main>
          <slot />
        </main>
      ) : (
        <>
          <main>
            <CLBWrapper>
              <Sidebar
                client:load
                propertyAddress={config.propertyAddress}
                tenantName={config.name}
                links={sidebarLinks}
                primaryLinks={sidebarPrimaryLinks}
                avatarImgSrc={avatarImgSrc}
              />
              <slot />
            </CLBWrapper>
          </main>
          <Footer />
        </>
      )
    }
  </body>
</html>
