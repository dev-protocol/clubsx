---
import Layout from '@layouts/Landing.astro'
import { config as _config } from '@fixtures/config'
import { replaceUrlConfigWithLocal } from '@fixtures/url'
import { decode, encode } from '@devprotocol/clubs-core'
import { whenNotError } from '@devprotocol/util-ts'

const { siteName } = Astro.params

const config = await _config(siteName).catch((err: Error) => err)

if (!config) {
  return new Response(null, {
    status: 404,
    statusText: 'Not found',
  })
}

const clubsxConfig = whenNotError(config, (conf) =>
  replaceUrlConfigWithLocal(decode(conf), Astro.request, Astro.url, siteName),
)
const clubsxConfigEncoded = whenNotError(clubsxConfig, encode)

if (config instanceof Error) {
  console.error({ config })
}
---

<Layout>
  {
    !(config instanceof Error) && (
      <input type="hidden" id="encodedConfig" value={config} />
    )
  }
  {
    !(clubsxConfigEncoded instanceof Error) && (
      <input
        type="hidden"
        id="encodedClubsxConfig"
        value={clubsxConfigEncoded}
      />
    )
  }
</Layout>

<script>
  import { decode } from '@devprotocol/clubs-core'

  const config = decode(
    (document.getElementById('encodedConfig') as HTMLInputElement).value,
  )
  const clubsxConfig = decode(
    (document.getElementById('encodedClubsxConfig') as HTMLInputElement).value,
  )

  console.log({ config, clubsxConfig })
</script>
