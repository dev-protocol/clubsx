---
import Layout from '@layouts/Default.astro'

import CLBWrapper from '@components/Primitives/CLBWrapper.astro'
import Sidebar from '@components/Sidebar/Sidebar.vue'
import Footer from '@components/Global/Footer.astro'
import Perks from '@components/Perks/Perks.astro'
import { tiers } from '@constants/tier'
import { fetchBadgeImageSrc } from '@fixtures/utility'
import { providers } from 'ethers'
import { tenantBy } from '@fixtures/data/tenants'

const tenant = tenantBy(Astro.params)

const listOfTier = await Promise.all(
  tiers.map(async ({ ...tier }) => {
    const badgeImageSrc = await fetchBadgeImageSrc({
      provider: new providers.JsonRpcProvider(
        import.meta.env.PUBLIC_WEB3_PROVIDER_URL
      ),
      tokenAddress: tenant?.propertyAddress ?? '',
      amount: tier.amount,
    })
    return { ...tier, badgeImageSrc }
  })
)
---

<Layout metaTitle="Dev Protocol | An open protocol for Creator Economy">
  <CLBWrapper>
    <Sidebar
      client:load
      propertyAddress={tenant?.propertyAddress}
      tenantName={tenant?.name}
    />
    <div class="px-4">
      <article class="grid gap-8">
        <h2 class="font-title text-4xl font-bold">Perks</h2>
        {
          listOfTier.map((tier, i) => (
            <section class="grid auto-rows-auto grid-cols-[1fr_2fr] gap-2 lg:grid-cols-[1fr_2fr_3fr]">
              <img
                src={tier.badgeImageSrc}
                class="rounded"
                role="presentation"
              />
              <header>
                <h2 class="font-title text-2xl font-bold">{tier.title}</h2>
                {tier.badgeImageDescription && (
                  <p class="mt-4 text-xs opacity-30">
                    {tier.badgeImageDescription}
                  </p>
                )}
              </header>
              <Perks tierId={tier.id} />
            </section>
          ))
        }
      </article>
    </div>
  </CLBWrapper>
  <Footer />
</Layout>
