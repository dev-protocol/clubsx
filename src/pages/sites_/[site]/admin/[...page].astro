---
import Admin from '@devprotocol/clubs-core/admin'
import { adminFactory } from '@devprotocol/clubs-core'
import { config as _config } from '@fixtures/config'
import admin from '@plugins/admin'
import community from '@plugins/community'
import memberships from '@plugins/memberships'
import quests from '@plugins/quests'
import home from '@plugins/home'

const { site, page } = Astro.params

const { getStaticPaths } = adminFactory({
  config: async () => await _config(site),
  plugins: {
    admin,
    quests,
    community,
    memberships,
    home,
  },
})

const path = (await getStaticPaths()).find(({ params }) => params.page === page)

if (!path) {
  throw new Error('Path undefined: ', path)
}

const Content = path.props.component
---

<Admin {...path.props}>
  <Content {...path.props} />
</Admin>

<script>
  import { onSubmitConfig } from '@devprotocol/clubs-core'
  import { GetModalProvider, ReConnectWallet } from '@fixtures/wallet'
  import { utils } from 'ethers'

  onSubmitConfig(async (data, onFinish) => {
    const splitHostname = window.location.hostname.split('.')
    const site = splitHostname[0]

    const modalProvider = GetModalProvider()
    const { provider, currentAddress } = await ReConnectWallet(modalProvider)
    if (!currentAddress || !provider) {
      return
    }
    const signer = provider.getSigner()

    const hash = await utils.hashMessage(data)
    const sig = await signer.signMessage(hash)
    if (!sig) {
      return
    }

    const body = {
      site,
      config: data,
      hash,
      sig,
      expectedAddress: currentAddress,
    }

    const res = await fetch('/api/updateConfig', {
      method: 'POST',
      body: JSON.stringify(body),
    })

    const success = res.ok
    onFinish({ success })
  })
</script>
