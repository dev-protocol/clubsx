---
import { isAddress } from 'ethers'
import type { Profile } from '@pages/api/profile'
import { getProfile } from '@fixtures/api/profile'
import { whenDefined } from '@devprotocol/util-ts'
import { passportClass } from '@fixtures/ui/passport'
import { getPassportItemForPayload } from '@fixtures/api/passportItem'
import { markdownToHtml, ProseTextInherit } from '@devprotocol/clubs-core'

import Layout from '../../Layout.astro'
import dummyData from '../../dummyData.json'
import Icon from '../../components/Icons.vue'
import type { PassportClip } from '../../types'
import Like from '../../components/Like.svelte'
import UserAssets from '../../components/UserAssets.vue'
import PassportClips from '../../components/PassportClips.vue'
import UserProfileEditButton from '../../components/UserProfileEditButton.svelte'

const { eoa, ids } = Astro.params
const isEOA = isAddress(eoa)

const id = ids?.split('/')?.at(0) ?? '' // Get the skin id from the URL.
const profile: Profile = await getProfile({ id: eoa ?? '' })

const isLocal =
  Astro.url.hostname.includes('localhost') ||
  /^[\d\.]+$/.test(Astro.url.hostname)

const htmlDescription = markdownToHtml(profile.description)

const skin = profile?.skins?.find((skin) => skin.id === id)
const _passportSkinBGMs = skin?.bgm
const _passportSkinClips = skin?.clips
const _passportSkinVideos = skin?.videos
const _currentLikes = skin?.likes

const passportSkinBGMs = await whenDefined(_passportSkinBGMs, () =>
  getPassportItemForPayload({
    sTokenPayload: _passportSkinBGMs ?? '',
  })
    .then((item) => (item instanceof Error ? undefined : item))
    .catch(() => undefined),
)

const passportSkinVideos = await whenDefined(
  _passportSkinVideos,
  async (videos) => {
    if (!videos.length) {
      return undefined
    }

    return Promise.all(
      videos.map((item) =>
        getPassportItemForPayload({ sTokenPayload: item ?? '' })
          .then((item) => (item instanceof Error ? undefined : item))
          .catch(() => undefined),
      ) ?? [],
    )
      .then((items) => items.filter((items) => !!items))
      .then((items) => (items.length ? items : undefined))
      .catch(() => undefined)
  },
)

const passportSkinClips = await whenDefined(
  _passportSkinClips,
  async (clips) => {
    if (!clips.length) {
      return undefined
    }

    return Promise.all(
      clips.map((item) =>
        getPassportItemForPayload({ sTokenPayload: item.payload ?? '' })
          .then(
            (clip) =>
              (clip instanceof Error
                ? undefined
                : {
                    ...clip,
                    description: item.description,
                    frameColorHex: item.frameColorHex,
                  }) as PassportClip,
          )
          .catch(() => undefined),
      ) ?? [],
    )
      .then((items) => items.filter((items) => !!items))
      .then((items) => (items.length ? items : undefined))
      .catch(() => undefined)
  },
)
---

<Layout theme="auto" sTokenPayload={profile?.skins?.at(0)?.theme}>
  <div class="grid gap-24 clear-right">
    <section class:list={passportClass('account-container')}>
      <span
        class="grid grid-cols-[6rem_1fr] lg:grid-cols-[10rem_1fr_auto] justify-items-start max-w-screen-lg mx-auto px-4 gap-6 lg:gap-y-8"
        class:list={passportClass('account-content')}
      >
        <span
          class="col-start-1 col-span-1"
          class:list={passportClass('avatar-container')}
        >
          <span
            class="flex flex-col items-center p-1.5 lg:p-2 rounded-full bg-surface-300"
            class:list={passportClass('avatar-content')}
          >
            <img
              src={profile.avatar}
              class="rounded-full object-cover w-full aspect-square bg-lightgray bg-cover bg-center bg-no-repeat"
              class:list={passportClass('avatar')}
              alt="Profile"
            />
          </span>
        </span>
        <span
          class="col-start-2 col-span-1 content-center"
          class:list={passportClass('username-container')}
        >
          <span
            class="flex justify-center items-center gap-6 px-3 py-1.5 lg:px-6 lg:py-3 rounded-xl bg-surface-200"
            class:list={passportClass('username-content')}
          >
            <span
              class="text-2xl lg:text-4xl font-bold"
              class:list={passportClass('username')}
            >
              {profile.username}
            </span>

            <UserProfileEditButton
              client:only="svelte"
              id={eoa}
              additionalClasses={passportClass('edit-button')}
            />
          </span>
        </span>

        {
          passportSkinBGMs && (
            <span
              class="col-start-1 row-start-2 lg:col-start-3 lg:row-start-1 col-span-1 row-span-1 content-center"
              class:list={passportClass('music-container')}
            >
              <span
                class="flex items-center gap-[15px] px-[16px] py-[8px] rounded-lg bg-surface-200"
                class:list={passportClass('music-content')}
              >
                <span class="opacity-50">
                  <Icon icon="muted" />
                </span>

                <span>
                  <Icon icon="music_waves" />
                </span>

                <span class="truncate font-bold">{dummyData.musicName}</span>
              </span>
            </span>
          )
        }

        {
          profile?.sns && (
            <span
              class="col-start-1 col-span-2 lg:col-span-3 row-start-3 row-span-1 lg:row-start-2"
              class:list={passportClass('links-container')}
            >
              <span
                class="grid grid-cols-5 items-start gap-6 p-3 rounded-lg bg-white"
                class:list={passportClass('links-content')}
              >
                <a
                  href={`https://x.com/${profile?.sns?.x}`}
                  target="_blank"
                  class={`${profile?.sns?.x ? 'cursor-pointer' : 'cursor-not-allowed'}`}
                >
                  <Icon icon="x" />
                </a>
                <a
                  href={`https://twitch.tv/${profile?.sns?.twitch}`}
                  target="_blank"
                  class={`${profile?.sns?.twitch ? 'cursor-pointer' : 'cursor-not-allowed'}`}
                >
                  <Icon icon="twitch" />
                </a>
                <a
                  href={`https://instagram.com/${profile?.sns?.instagram}`}
                  target="_blank"
                  class={`${profile?.sns?.instagram ? 'cursor-pointer' : 'cursor-not-allowed'}`}
                >
                  <Icon icon="instagram" />
                </a>
                <a
                  href={`https://tiktok.com/${profile?.sns?.tiktok}`}
                  target="_blank"
                  class={`${profile?.sns?.tiktok ? 'cursor-pointer' : 'cursor-not-allowed'}`}
                >
                  <Icon icon="tiktok" />
                </a>
                <a
                  href={`https://youtube.com/${profile?.sns?.youtube}`}
                  target="_blank"
                  class={`${profile?.sns?.youtube ? 'cursor-pointer' : 'cursor-not-allowed'}`}
                >
                  <Icon icon="youtube" />
                </a>
              </span>
            </span>
          )
        }

        <span
          class="col-start-1 col-span-2 lg:col-span-3 row-start-4 lg:row-start-3 row-span-1 w-full"
          class:list={[passportClass('description-container')]}
        >
          <span
            class="flex w-full justify-center items-center gap-2.5 p-4 self-stretch block rounded-xl"
            class:list={[passportClass('description-content')]}
          >
            <div
              class:list={[ProseTextInherit, passportClass('description')]}
              set:html={htmlDescription}
            />
          </span>
        </span>
      </span>
    </section>

    {
      passportSkinVideos && (
        <section class="grid justify-items-start max-w-screen-lg mx-auto px-4 gap-24 mb-10">
          <span class:list={passportClass('video-container')}>
            <span class:list={passportClass('video-content')}>
              <img
                src={dummyData.videoThumbnail}
                class="w-full h-auto aspect-video rounded-sm"
                class:list={passportClass('video')}
                alt="Video"
              />
            </span>
          </span>
        </section>
      )
    }

    <section
      class="grid justify-items-start max-w-screen-lg mx-auto px-4 gap-24 mb-10"
    >
      {
        passportSkinClips?.length && (
          <div class:list={passportClass('clips-container')}>
            <div class:list={passportClass('clips-content')}>
              <PassportClips client:only="vue" clips={passportSkinClips} />
            </div>
          </div>
        )
      }

      {isEOA && <UserAssets client:load account={eoa ?? ''} local={isLocal} />}

      <a href={`/passport/${eoa}/clubs`} class="hs-link place-self-start"
        >Clubs</a
      >
    </section>
  </div>
  <div class="sticky float-right bottom-0 p-2 lg:p-6">
    <Like
      client:load
      props={{
        profileId: eoa ? eoa : '',
        currentLikes: _currentLikes ? _currentLikes : 0,
        skinIndex: 0,
      }}
    />
  </div>
</Layout>
