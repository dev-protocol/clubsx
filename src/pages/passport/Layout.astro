---
import { whenDefined } from '@devprotocol/util-ts'
import { passportClass } from '@fixtures/ui/passport'
import { ClubsPictogramAdaptable as Favicon } from '@devprotocol/clubs-core/images'

import '@devprotocol/clubs-core/styles'
import type { Skin } from '@pages/api/profile'
import Header from '@components/Global/Header.astro'
import { getPassportItemForPayload } from '@fixtures/api/passportItem'
import SkinSwitch from 'src/pages/passport/components/SkinSwitch.svelte'

type Props = {
  eoa: string
  skins: Skin[]
  selectedSkinId: string
  sTokenPayload?: string
  theme?: 'light' | 'dark' | 'auto'
}

const {
  theme = 'dark',
  sTokenPayload,
  skins = [],
  eoa = '',
  selectedSkinId = '',
} = Astro.props

const name = 'Clubs'
const url = 'https://www.clubs.place/'
const twitterHandle = 'poweredbyClubs'
const title = 'Clubs | All-in-One Space for Creators'
const ogURL =
  'https://cdn.prod.website-files.com/63ddf59d6f6edd36e251c76f/6678cd54f0f0cfe31677b681_og.png'
const description =
  'Create your own space with Clubs and collect your favorites with Passport. Memberships, tickets, merch, and more, all easily manage and sell in one place.'

const passportSkinTheme = await whenDefined(sTokenPayload, (payload: string) =>
  getPassportItemForPayload({
    sTokenPayload: payload ?? '',
  })
    .then((item) => (item instanceof Error ? undefined : item))
    .catch(() => undefined),
)
---

<html
  lang="en"
  hashi-theme={theme === 'auto' ? undefined : theme}
  class:list={passportClass()}
>
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>

    <link rel="icon" type="image/svg" href={Favicon.src} />
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin /><link
      href="https://fonts.googleapis.com/css2?family=Poppins:wght@700&display=swap"
      rel="stylesheet"
    />

    {
      passportSkinTheme?.itemAssetType === 'stylesheet-link' && (
        <link rel="stylesheet" href={`${passportSkinTheme.itemAssetValue}`} />
      )
    }

    {
      passportSkinTheme?.itemAssetType === 'css' && (
        <style set:html={passportSkinTheme?.itemAssetValue ?? ''} />
      )
    }

    <meta name="description" content={`${description}`} />
    <meta property="og:title" content={title} />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={`${ogURL}`} />
    <meta property="og:description" content={description} />
    <meta property="og:site_name" content={name} />
    <meta name="twitter:site" content={twitterHandle} />
    <meta name="twitter:creator" content={twitterHandle} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={description} />
    <meta name="twitter:image" content={`${ogURL}`} />
  </head>

  <body
    class="min-h-screen bg-background font-body text-surface-ink"
    class:list={passportClass('body')}
  >
    <div class:list={passportClass('hero-container')}>
      <div class:list={passportClass('hero')}></div>
    </div>
    <div
      class="relative z-10 overflow-x-clip"
      class:list={passportClass('main-container')}
    >
      <slot name="before-header" />

      <Header connectButton="show" pageTitle="Passport">
        <SkinSwitch
          client:load
          slot="passport:profile:switcher"
          skins={skins ?? []}
          eoa={eoa ?? ''}
          selectedSkinId={selectedSkinId ?? skins?.at(0)?.id ?? ''}
        />
      </Header>

      <div class:list={passportClass('main-content')}>
        <main class:list={passportClass('main')}>
          <slot />
        </main>
      </div>
    </div>
  </body>
</html>
