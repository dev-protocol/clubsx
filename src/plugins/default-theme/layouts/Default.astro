---
import type { ClubsConfiguration } from '@devprotocol/clubs-core'
import type { UndefinedOr } from '@devprotocol/util-ts'
import '@devprotocol/clubs-core/styles'
import Header from '../components/Header/Header.astro'
import Hero from '../components/Hero/Hero.astro'
import type { NavLink } from '@constants/navLink'
import Navigation from '../components/Navigation/Navigation.astro'
import type { Membership } from '@plugins/memberships'
import Memberships from '../components/Memberships/Memberships.astro'
import type { Colors } from '..'
import { generateRGBA } from '../utils/generateRGBA'

const { page } = Astro.params
const { metaTitle, config, homeConfig, colors, globalConfig } = Astro.props as {
  metaTitle?: string
  config: ClubsConfiguration
  colors: Colors
  globalConfig?: {
    bg: string
    backgroundGradient?: [string, string]
  }
  homeConfig: {
    hero: {
      image: string
    }
    description: string
    sections: {
      title: string
      body: {
        image: string
        description: string
      }
    }[]
  }
}

const { name, propertyAddress, rpcUrl, chainId } = config
const title = metaTitle ? `${config.name} : ${metaTitle}` : config.name

const ogp = config.options?.find((option) => option.key === 'ogp')
  ?.value as UndefinedOr<{ image?: string }>

const avatarImgSrc: UndefinedOr<string> = config.options?.find(
  (option) => option.key === 'avatarImgSrc'
)?.value as string

const memberships = config.plugins
  .find((plg) => plg.name === 'memberships')
  ?.options.find((opt) => opt.key === 'memberships')?.value as UndefinedOr<
  Membership[]
>

const socialLinks =
  config.options?.find((option) => option.key === 'socialLinks')?.value ??
  ([] as NavLink[])

const navigationLinks: NavLink[] = [
  { path: '/', display: 'Club' },
  ...((config.options?.find((option) => option.key === 'navigationLinks')
    ?.value as NavLink[]) ?? []),
]
const currentLink = navigationLinks?.find((link) =>
  ((pathname) => pathname === link.path)(`/${page ?? ''}`)
)

const url = Astro.url.href.replace(/(.*)\/sites_\/\w*(.*)/i, '$1$2')

const backgroundColor = globalConfig?.bg ?? '#ADADAD'
---

<style define:vars={{ backgroundColor }}>
  body {
    background-color: var(--backgroundColor);
  }
</style>

<html lang="en">
  <head>
    <meta charset="UTF-8" />
    <meta name="viewport" content="width=device-width" />
    <title>{title}</title>
    <link rel="icon" type="image/svg" href={avatarImgSrc || '/favicon.svg'} />
    <meta name="description" content={`${config.description}`} />
    <meta property="og:title" content={title} />
    <meta property="og:type" content="website" />
    <meta property="og:url" content={url} />
    <meta property="og:image" content={`${ogp?.image}`} />
    <meta property="og:description" content={config.description} />
    <meta property="og:site_name" content={config.name} />
    <meta name="twitter:site" content={config.twitterHandle} />
    <meta name="twitter:creator" content={config.twitterHandle} />
    <meta name="twitter:card" content="summary_large_image" />
    <meta name="twitter:title" content={title} />
    <meta name="twitter:description" content={config.description} />
    <meta name="twitter:image" content={`${ogp?.image}`} />
  </head>

  <body class="min-h-screen overflow-x-hidden font-body text-white">
    <Header chainId={chainId} />
    <Hero
      image={homeConfig.hero.image}
      avatar={avatarImgSrc}
      name={name}
      propertyAddress={propertyAddress}
      rpcUrl={rpcUrl}
      socialLinks={socialLinks}
      description={homeConfig.description}
      colors={colors}
      globalConfig={globalConfig}
    />
    <div
      class="container relative mx-auto my-12 mb-5 max-w-7xl lg:my-20 lg:mb-16 xl:px-0"
    >
      <Navigation links={navigationLinks} current={currentLink} />
    </div>
    <main
      class="container relative mx-auto flex max-w-7xl flex-col-reverse gap-6 px-6 xl:flex-row xl:gap-24 xl:px-0"
    >
      <div class="max-w-4xl">
        <slot />
      </div>
      <Memberships memberships={memberships} />
    </main>
    <footer class="container mx-auto max-w-7xl py-24">Footer</footer>
  </body>
</html>
