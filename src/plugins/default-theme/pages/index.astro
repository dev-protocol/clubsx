---
import type { Membership } from '@plugins/memberships'
import Markdown from '@components/Markdown/Markdown.astro'
import { ClubsSlotName, type ClubsPropsPages } from '@devprotocol/clubs-core'

import type { SectionOrderingValue } from '..'
import About_ from '../components/About.svelte'
import WaitForLaunch from '../components/WaitForLaunch.svelte'
import MembershipTitle from '../components/MembershipTitle.svelte'
import Memberships from '../components/Memberships/Memberships.astro'
import type { ComposedItem } from '@plugins/clubs-payments'

type Props = ClubsPropsPages & {
  memberships?: Membership[]
  homeConfig: {
    hero: {
      image: string
    }
    description: string
    body: string
  }
  name: string
  sectionsOrderConfig: SectionOrderingValue
  clubsPaymentsOverrides: ComposedItem[]
}

const {
  memberships,
  homeConfig,
  name,
  clubs,
  sectionsOrderConfig,
  clubsPaymentsOverrides,
} = Astro.props

const SlotsPageContentHomeBeforeContent = clubs.slots.filter(({ slot }) => {
  return slot === ClubsSlotName.PageContentHomeBeforeContent
})
const SlotsPageContentHomeAfterContent = clubs.slots.filter(({ slot }) => {
  return slot === ClubsSlotName.PageContentHomeAfterContent
})
---

<article class="grid gap-6">
  {
    // Display slots of PageContentHomeBeforeContent
    SlotsPageContentHomeBeforeContent.map((Slot) => (
      <Slot.component {...Slot.props} />
    ))
  }

  {
    sectionsOrderConfig && sectionsOrderConfig === 'about-first' ? (
      <>
        <About_ client:only="svelte" name={name} />
        <Markdown
          body={homeConfig.body}
          class="mx-auto mt-4 w-full max-w-2xl lg:mt-6"
          size="xl"
        />
      </>
    ) : (
      <section class="grid">
        {memberships ? (
          <>
            <MembershipTitle
              client:only="svelte"
              hasSingleMembership={!memberships || memberships?.length <= 1}
            />
            <Memberships
              memberships={memberships}
              name={name}
              overrides={clubsPaymentsOverrides}
            />
          </>
        ) : (
          <WaitForLaunch client:only="svelte" />
        )}
      </section>
    )
  }

  {
    sectionsOrderConfig && sectionsOrderConfig === 'about-first' ? (
      <section class="grid">
        {memberships ? (
          <>
            <MembershipTitle
              client:only="svelte"
              hasSingleMembership={!memberships || memberships?.length <= 1}
            />
            <Memberships
              memberships={memberships}
              name={name}
              overrides={clubsPaymentsOverrides}
            />
          </>
        ) : (
          <WaitForLaunch client:only="svelte" />
        )}
      </section>
    ) : (
      <>
        <About_ client:only="svelte" name={name} />
        <Markdown
          body={homeConfig.body}
          class="mx-auto mt-4 w-full max-w-2xl lg:mt-6"
          size="xl"
        />
      </>
    )
  }

  {
    // Display slots of SlotsPageContentHomeAfterContent
    SlotsPageContentHomeAfterContent.map((Slot) => (
      <Slot.component {...Slot.props} />
    ))
  }
</article>
