---
import type { NavLink } from '@constants/navLink'
import Card from '../Card/Card.astro'
import NumberOfMembers from './NumberOfMembers.svelte'
import Description from './Description.svelte'
import Twitter from '@components/Icons/Twitter.astro'
import Discord from '@components/Icons/Discord.astro'
import Clubs from '@assets/clubs--white.svg'

const {
  globalConfig,
  image,
  avatar,
  name,
  description,
  propertyAddress,
  rpcUrl,
  socialLinks,
  compact,
} = Astro.props as {
  globalConfig?: {
    bg: string
    backgroundGradient?: [string, string]
  }
  image?: string
  avatar?: string
  name?: string
  description?: string
  propertyAddress?: string
  rpcUrl?: string
  socialLinks?: NavLink[]
  compact?: boolean
}

const twitter = socialLinks?.find((l) => l.kind === 'twitter')
const discord = socialLinks?.find((l) => l.kind === 'discord')
const socials =
  twitter || discord ? [twitter, discord].map((x) => x) : undefined

const backgroundGradientColorFrom = globalConfig?.backgroundGradient?.[0]
const backgroundGradientColorTo = globalConfig?.backgroundGradient?.[1]
---

<style define:vars={{ backgroundGradientColorFrom, backgroundGradientColorTo }}>
  .gradient {
    background: radial-gradient(
      50% 50% at 50% 50%,
      var(--backgroundGradientColorFrom) 0%,
      var(--backgroundGradientColorTo) 100%
    );
  }
</style>

<!-- Cover image -->
<div
  role="presentation"
  class:list={[
    'relative z-0 overflow-x-clip',
    { 'h-72 lg:h-[32rem]': !compact },
    { 'h-32': compact },
  ]}
>
  <div
    class:list={[
      {
        gradient:
          Boolean(backgroundGradientColorFrom) &&
          Boolean(backgroundGradientColorTo),
      },
      'absolute',
      'left-1/2',
      'bottom-0',
      'translate-x-[-50%]',
      'translate-y-[50%]',
      'aspect-square',
      'rounded-full',
      'w-[950px]',
      'lg:w-[1800px]',
    ]}
  >
  </div>
  {
    !compact && (
      <>
        <img
          src={image}
          class="absolute h-full w-full max-w-full object-cover"
        />
        <div class="absolute bottom-0 hidden h-3/6 w-full bg-gradient-to-b from-transparent to-black/50 lg:block" />
        <a
          href="https://clubs.place"
          class="absolute bottom-0 right-0 mb-4 mr-8 flex items-center gap-1 text-lg font-bold lg:mb-8 lg:mr-16"
        >
          <img src={Clubs} alt="Clubs" /> Clubs
        </a>
      </>
    )
  }
</div>

<!-- Avatar, Title, etc.  -->
<section
  class:list={[
    'container relative mx-auto flex max-w-7xl flex-col items-start justify-between gap-6 px-6 lg:flex-row xl:px-0',
    { '-mt-2 lg:-mt-44': !compact },
  ]}
>
  <div class="flex max-w-2xl flex-col gap-6">
    <a href="/">
      <h1 class="flex items-center gap-6 lg:gap-12">
        <img
          src={avatar}
          class:list={[
            'rounded-full border-4 border-surface-200 object-cover',
            {
              'h-14 w-14 lg:h-24 lg:w-24': !compact,
            },
            {
              'h-7 w-7 lg:h-14 lg:w-14': compact,
            },
          ]}
        />
        <span
          class:list={[
            'font-bold',
            { 'text-2xl font-bold lg:text-5xl': !compact },
            { 'text-xl font-bold lg:text-2xl': compact },
          ]}>{name}</span
        >
      </h1>
    </a>
    {
      !compact && (
        <Card class="lg:bg-black/10 lg:py-2.5 lg:backdrop-blur-3xl">
          <Description client:load>{description}</Description>
        </Card>
      )
    }
  </div>
  {
    !compact && (
      <div class="flex items-center justify-between gap-12 lg:mt-48 lg:justify-start lg:gap-24">
        <p>
          <NumberOfMembers
            client:load
            propertyAddress={propertyAddress}
            rpcUrl={rpcUrl}
          />
        </p>
        {socials && (
          <ul class="flex gap-12">
            {socials.map((link) => (
              <a href={link?.path} target="_blank" rel="noopener">
                {link?.kind === 'twitter' ? (
                  <Twitter />
                ) : link?.kind === 'discord' ? (
                  <Discord />
                ) : (
                  link?.display
                )}
              </a>
            ))}
          </ul>
        )}
      </div>
    )
  }
</section>
