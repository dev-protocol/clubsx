---
import NumberOfMembers from './NumberOfMembers.svelte'
import Description from './Description.svelte'

const {
  globalConfig,
  image,
  avatar,
  name,
  description,
  propertyAddress,
  rpcUrl,
  compact,
  isInDraft,
} = Astro.props as {
  globalConfig?: {
    bg: string
    backgroundGradient?: [string, string]
  }
  image?: string
  avatar?: string
  name?: string
  description?: string
  propertyAddress?: string
  rpcUrl?: string
  compact?: boolean
  isInDraft?: boolean
}

const backgroundGradientColorFrom = globalConfig?.backgroundGradient?.[0]
const backgroundGradientColorTo = globalConfig?.backgroundGradient?.[1]
---

<style define:vars={{ backgroundGradientColorFrom, backgroundGradientColorTo }}>
  .gradient {
    background: radial-gradient(
      50% 50% at 50% 50%,
      var(--backgroundGradientColorFrom) 0%,
      var(--backgroundGradientColorTo) 100%
    );
  }

  #cover-image {
    mask-image: linear-gradient(
      to bottom,
      black 0%,
      black 40%,
      transparent 100%
    );
  }
</style>

<!-- Cover image -->
<div
  role="presentation"
  class:list={[
    'relative z-0 overflow-x-clip',
    { '-mb-32 lg:-mb-44': !compact },
    { 'h-72 lg:h-[32rem]': !compact },
    { 'h-32': compact },
  ]}
>
  <div
    class:list={[
      {
        gradient:
          Boolean(backgroundGradientColorFrom) &&
          Boolean(backgroundGradientColorTo),
      },
      'absolute',
      'left-1/2',
      'bottom-0',
      'translate-x-[-50%]',
      'translate-y-[50%]',
      'aspect-square',
      'rounded-full',
      'w-[950px]',
      'lg:w-[1800px]',
    ]}
  >
  </div>
  {
    !compact && (
      <img
        id="cover-image"
        src={image}
        class="absolute aspect-square h-full w-full max-w-full object-cover"
      />
    )
  }
</div>

<!-- Avatar, Title, etc.  -->
<section
  class="container relative mx-auto flex flex max-w-4xl items-start justify-center gap-6 px-6"
>
  <div class="grid max-w-2xl grid-cols-[1fr_auto] items-center gap-2">
    <a href="/">
      <h1 class="flex items-center gap-4 lg:gap-8">
        <span
          transition:name="avatar"
          class:list={[
            'overflow-hidden rounded-full border-4 border-surface-200 object-cover',
            {
              'h-12 w-12 lg:h-24 lg:w-24': !compact,
            },
            {
              'h-7 w-7 lg:h-14 lg:w-14': compact,
            },
          ]}
        >
          <img src={avatar} class="h-full w-full object-cover" />
        </span>
        <span
          class:list={[
            'font-bold',
            { 'text-2xl font-bold lg:text-5xl': !compact },
            { 'text-xl font-bold lg:text-2xl': compact },
          ]}>{name}</span
        >
      </h1>
    </a>
    <NumberOfMembers
      client:load
      propertyAddress={propertyAddress}
      rpcUrl={rpcUrl}
      isInDraft={isInDraft}
    />
    <div class="col-span-2">
      <Description client:load>
        {
          description ??
            'Lorem ipsum dolor sit amet, consectetur adipiscing elit'
        }
      </Description>
    </div>
  </div>
</section>
