---
import MembershipOption from '@components/AdminMembershipsForm/MembershipOption.svelte'
import { bytes32Hex } from '@devprotocol/clubs-core'
import type { ComposedItem } from '@plugins/clubs-payments'
import { createPath } from '@plugins/clubs-payments/utils/create-path'
import type { Membership } from '@plugins/memberships'
import { i18nFactory } from '@devprotocol/clubs-core'
import { Strings } from '../../i18n'

type Props = {
  memberships: Membership[]
  name: string
  overrides?: ComposedItem[]
}

const { memberships, name, overrides } = Astro.props

const i18nBase = i18nFactory(Strings)
const langs = Astro.request.headers
  .get('accept-language')
  ?.replace(/;q=[\d\.]+/g, '')
  .split(',') ?? ['en']
const i18n = i18nBase(langs)

const find = (
  membership: Membership,
): { membership: Membership; override?: ComposedItem } => {
  return {
    membership,
    override: overrides?.find(
      (ov) => bytes32Hex(ov.source.payload) === bytes32Hex(membership.payload),
    ),
  }
}
---

<ul
  class="-mx-6 grid grid-cols-[repeat(auto-fit,_minmax(120px,_1fr))] justify-center gap-4 p-6 md:grid-cols-[repeat(auto-fit,_minmax(200px,_1fr))] xl:gap-9"
>
  {
    memberships.map((mem) =>
      (({ membership, override }) => (
        <li class="only:mx-auto only:max-w-[360px]">
          <MembershipOption
            client:load
            clubName={name}
            id={membership.id}
            name={membership.name}
            price={String(override?.price.yen || membership.price)}
            currency={membership.currency}
            nonStandardCurrency={override?.price.yen ? i18n('JPY') : undefined}
            description={membership.description}
            imagePath={membership.imageSrc}
            action={
              override ? createPath(override.payload) : `/join/${membership.id}`
            }
            actionLabel={membership.price ? 'Purchase' : 'Next'}
          />
        </li>
      ))(find(mem)),
    )
  }
</ul>
