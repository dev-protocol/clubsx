---
import { bytes32Hex, type Membership } from '@devprotocol/clubs-core'
import ClaimButton from './components/ClaimButton.svelte'
import type { Invitation } from './redis-schema'
import Markdown from '@components/Markdown/Markdown.astro'

const fullUrl = Astro.url.pathname
// get the last value of the url
const invitationId = fullUrl.split('/').pop()

const { memberships, baseUrl } = Astro.props as {
  memberships: Membership[]
  baseUrl: string
}

const res = await fetch(
  `${baseUrl}/api/devprotocol:clubs:plugin:invitations/invitations/${invitationId}`,
  // `http://localhost:3000/sites_/pizza/api/devprotocol:clubs:plugin:invitations/invitations/${invitationId}`,
  {
    method: 'GET',
    headers: {
      'Content-Type': 'application/json',
    },
  },
)

if (!res.ok) {
  console.log('in here!')
  return {
    status: 404,
    headers: {
      location: '/404',
    },
  }
}

const invitation = (await res.json()) as Invitation

const membership = memberships.find(
  (m) => bytes32Hex(m.payload) === bytes32Hex(invitation.membership.payload),
)

if (!membership) {
  console.log('no membership!')
  return {
    status: 404,
    headers: {
      location: '/404',
    },
  }
}
---

<div
  class="grid gap-8 grid-cols-[minmax(auto,32rem)] rounded-2xl p-6 justify-center shadow bg-dp-white-200 text-dp-white-ink"
>
  <div class="rounded-md p-4 border border-black/20 bg-black/10">
    <img
      class="rounded-md object-cover"
      src={membership.imageSrc}
      alt={membership.name}
    />
  </div>

  <ClaimButton client:only="svelte" {invitation} />
  <ClaimButton client:only="svelte" {invitation} />
</div>
<ClaimButton client:only="svelte" {invitation} />

<h2 class="text-3xl font-bold">{membership.name}</h2>

<Markdown body={membership.description} class="bg-gray-100 rounded p-8" />
