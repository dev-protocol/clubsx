---
import KYCInfo from './KYCInfo'
import FundsInfo from './Funds.tsx'
import FundsTeaser from './FundsTeaser.tsx'
import { ZeroAddress } from 'ethers'
import type { Membership } from '@plugins/memberships'
import {
  FeatureFlagValues,
  FeatureFlags,
  getFlagsByParams,
} from '@fixtures/flags'

const { memberships, chainId, propertyAddress } = Astro.props

const flags = getFlagsByParams({ url: new URL(Astro.url) })
const isKycEnabled = flags.get(FeatureFlags.Kyc) === FeatureFlagValues.Enable

let beneficiaries: string[] = memberships.map(
  (membership: Membership) => membership.fee?.beneficiary ?? ZeroAddress,
)
const uniqueBeneficiaries = new Array(...new Set(beneficiaries))
---

<section class="flex flex-col">
  <h1 class="mb-16 font-title text-lg font-bold">Funds</h1>
  {
    isKycEnabled ? (
      <div class="grid gap-16">
        <KYCInfo
          client:only="react"
          chainId={chainId}
          uniqueBeneficiaries={uniqueBeneficiaries}
          propertyAddress={propertyAddress}
        />
        <FundsInfo
          client:only="react"
          chainId={chainId}
          uniqueBeneficiaries={uniqueBeneficiaries}
          propertyAddress={propertyAddress}
        />
      </div>
    ) : (
      <FundsTeaser
        client:only="react"
        chainId={chainId}
        uniqueBeneficiaries={uniqueBeneficiaries}
        propertyAddress={propertyAddress}
      />
    )
  }
</section>
