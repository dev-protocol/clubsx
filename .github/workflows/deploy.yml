name: Deploy - Live

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
  VERCEL_PROJECT_ID: ${{ secrets.VERCEL_PROJECT_ID }}

on:
  release:
    types: [published]

jobs:
  Check:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    outputs:
      isPrerelease: ${{ steps.check.outputs.isPrerelease }}
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: use yarn
        run: |
          corepack enable
          echo 'nodeLinker: node-modules' >> .yarnrc.yml
          cat .yarnrc.yml

      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Check if pre-release
        id: check
        run: |
          IS_PRERELEASE=$(curl --silent --show-error \
            -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" \
            "https://api.github.com/repos/${{ github.repository }}/releases/tags/${{ github.ref_name }}" \
            | jq '.prerelease')
          echo "::set-output name=isPrerelease::$IS_PRERELEASE"

  Deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [20.x]
    needs: Check
    if: needs.Check.outputs.isPrerelease != 'true'
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}

      - name: use yarn
        run: |
          corepack enable
          echo 'nodeLinker: node-modules' >> .yarnrc.yml
          cat .yarnrc.yml

      - name: Install Vercel CLI
        run: npm install --global vercel@latest
      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}
      - name: Build Project Artifacts
        run: vercel build --prod --token=${{ secrets.VERCEL_TOKEN }}
      - name: Deploy
        run: vercel deploy --prebuilt --prod --token=${{ secrets.VERCEL_TOKEN }}
